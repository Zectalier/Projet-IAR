
# Caution: use only the 'suggest_type' in case of using optuna
save_best: False
plot_agents: False
collect_stats: False

log_dir: ./tmp
video_dir: ${log_dir}/videos

hydra:
  run:
    dir: ${log_dir}/hydra/${now:%Y-%m-%d}/${now:%H-%M-%S}

optuna:
  study:
    _target_: optuna.create_study
    study_name: dqn_vec
    direction: maximize
    # for a list of optuna pruners, this is here: https://optuna.readthedocs.io/en/stable/reference/pruners.html
    pruner:
      _target_: optuna.pruners.MedianPruner
      n_startup_trials: 5
      n_warmup_steps: 5
      interval_steps: 1
  optimize:
    n_trials: 10
    timeout: 600
    n_jobs: 1

# The following arguments have to be adapted if using another logger (e.g. TfLogger)
logger:
  classname: bbrl.utils.logger.WandbLogger
  project: "dqn_vec"
  group: "test_optuna_optim"
  tags: "test_vec_dqn"
  job_type: test
  log_dir: ${log_dir}
  cache_size: 10000
  every_n_seconds: 10
  verbose: False

env:
  identifier: CartPole-v1
  render_mode: rgb_array
  name: env

gym_env_train:
  classname: __main__.make_env
  identifier: ${env.identifier}
  render_mode: ${env.render_mode}
  autoreset: True

gym_env_eval:
  classname: __main__.make_env
  identifier: ${env.identifier}
  render_mode: ${env.render_mode}
  autoreset: False

algorithm:
  architecture:
    hidden_sizes: [64, 64]

  seed:
    train: 335
    eval: 983
    q: 123
    explorer: 456
    torch: 789

  explorer:
    epsilon_start: 0.7
    epsilon_end: 0.2
    decay: 0.999

  buffer:
    max_size:
      suggest_type: categorical
      choices:
        - 5000
        - 10_000
        - 60_0000
    batch_size: 256
    learning_starts:
        suggest_type: categorical
        choices:
          - 1_000
          - 5_000

  target_critic_update_interval: 10
  max_grad_norm:
    suggest_type: categorical
    choices:
      - 0.5
      - 1.0
      - 2.0

  n_envs_eval: 10
  n_envs_train: 5
  n_steps_train: 50

  optim_n_updates:
    suggest_type: categorical
    choices:
      - 1
      - 3
      - 4
      - 6
  discount_factor:
    suggest_type: categorical
    choices:
      - 0.9
      - 0.99
      - 0.999

  n_steps: 70_000
  eval_interval: 1000


optimizer:
  classname: torch.optim.Adam
  lr: 5e-4
